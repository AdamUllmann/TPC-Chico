{"ast":null,"code":"var _jsxFileName = \"/Users/steven/Desktop/tpc/src/Pages/Events.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../CSS/Events.css';\nimport eventsData from '../DataFiles/EventsData';\nimport Calendar from 'react-calendar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Events() {\n  _s();\n  const [value, setValue] = useState(new Date());\n  function onChange(nextValue) {\n    setValue(nextValue);\n  }\n  function tileContent({\n    date,\n    view\n  }) {\n    const formattedDate = date.toISOString().split('T')[0]; // Convert date to ISO format\n    const eventsForDay = eventsData.filter(event => event.date === formattedDate);\n    if (eventsForDay.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: eventsForDay.map((event, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: event.title\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this);\n    }\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(Calendar, {\n    onChange: onChange,\n    value: value,\n    className: \"Calendar\",\n    tileContent: tileContent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(Events, \"ojhCmkQ3k+kVHyMOfBmyTFu2wy0=\");\n_c = Events;\nexport default Events;\nvar _c;\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"names":["React","useState","eventsData","Calendar","jsxDEV","_jsxDEV","Events","_s","value","setValue","Date","onChange","nextValue","tileContent","date","view","formattedDate","toISOString","split","eventsForDay","filter","event","length","children","map","index","title","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/steven/Desktop/tpc/src/Pages/Events.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../CSS/Events.css';\nimport eventsData from '../DataFiles/EventsData';\nimport Calendar from 'react-calendar';\n\nfunction Events() {\n  const [value, setValue] = useState(new Date());\n\n  function onChange(nextValue) {\n    setValue(nextValue);\n  }\n\n  function tileContent({ date, view }) {\n    const formattedDate = date.toISOString().split('T')[0]; // Convert date to ISO format\n    const eventsForDay = eventsData.filter((event) => event.date === formattedDate);\n    if (eventsForDay.length > 0) {\n      return (\n        <div>\n          {eventsForDay.map((event, index) => (\n            <p key={index}>{event.title}</p>\n          ))}\n        </div>\n      );\n    }\n    return null;\n  }\n  \n\n  return (\n    <Calendar\n      onChange={onChange}\n      value={value}\n      className=\"Calendar\"\n      tileContent={tileContent}\n    />\n  );\n}\n\nexport default Events;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,mBAAmB;AAC1B,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,QAAQ,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAIS,IAAI,CAAC,CAAC,CAAC;EAE9C,SAASC,QAAQA,CAACC,SAAS,EAAE;IAC3BH,QAAQ,CAACG,SAAS,CAAC;EACrB;EAEA,SAASC,WAAWA,CAAC;IAAEC,IAAI;IAAEC;EAAK,CAAC,EAAE;IACnC,MAAMC,aAAa,GAAGF,IAAI,CAACG,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxD,MAAMC,YAAY,GAAGjB,UAAU,CAACkB,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACP,IAAI,KAAKE,aAAa,CAAC;IAC/E,IAAIG,YAAY,CAACG,MAAM,GAAG,CAAC,EAAE;MAC3B,oBACEjB,OAAA;QAAAkB,QAAA,EACGJ,YAAY,CAACK,GAAG,CAAC,CAACH,KAAK,EAAEI,KAAK,kBAC7BpB,OAAA;UAAAkB,QAAA,EAAgBF,KAAK,CAACK;QAAK,GAAnBD,KAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAkB,CAChC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAEV;IACA,OAAO,IAAI;EACb;EAGA,oBACEzB,OAAA,CAACF,QAAQ;IACPQ,QAAQ,EAAEA,QAAS;IACnBH,KAAK,EAAEA,KAAM;IACbuB,SAAS,EAAC,UAAU;IACpBlB,WAAW,EAAEA;EAAY;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEN;AAACvB,EAAA,CA/BQD,MAAM;AAAA0B,EAAA,GAAN1B,MAAM;AAiCf,eAAeA,MAAM;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}