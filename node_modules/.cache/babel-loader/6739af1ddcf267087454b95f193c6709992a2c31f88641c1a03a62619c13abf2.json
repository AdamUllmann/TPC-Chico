{"ast":null,"code":"var _jsxFileName = \"/Users/steven/Desktop/tpc/src/Pages/Events.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../CSS/Events.css';\nimport eventsData from '../DataFiles/EventsData';\nimport Calendar from 'react-calendar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Events() {\n  _s();\n  const [value, setValue] = useState(new Date());\n  function onChange(nextValue) {\n    setValue(nextValue);\n  }\n  function tileContent({\n    date\n  }) {\n    const eventForDay = eventsData.find(event => event.date === date.toLocaleDateString());\n    if (eventForDay) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: eventForDay.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 14\n      }, this);\n    }\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(Calendar, {\n    onChange: onChange,\n    value: value,\n    className: \"Calendar\",\n    tileContent: tileContent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Events, \"ojhCmkQ3k+kVHyMOfBmyTFu2wy0=\");\n_c = Events;\nexport default Events;\nvar _c;\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"names":["React","useState","eventsData","Calendar","jsxDEV","_jsxDEV","Events","_s","value","setValue","Date","onChange","nextValue","tileContent","date","eventForDay","find","event","toLocaleDateString","children","title","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/steven/Desktop/tpc/src/Pages/Events.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../CSS/Events.css';\nimport eventsData from '../DataFiles/EventsData';\nimport Calendar from 'react-calendar';\n\nfunction Events() {\n  const [value, setValue] = useState(new Date());\n\n  function onChange(nextValue) {\n    setValue(nextValue);\n  }\n\n  function tileContent({ date }) {\n    const eventForDay = eventsData.find(\n      (event) => event.date === date.toLocaleDateString()\n    );\n\n    if (eventForDay) {\n      return <p>{eventForDay.title}</p>;\n    }\n\n    return null;\n  }\n\n  return (\n    <Calendar\n      onChange={onChange}\n      value={value}\n      className=\"Calendar\"\n      tileContent={tileContent}\n    />\n  );\n}\n\nexport default Events;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,mBAAmB;AAC1B,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,QAAQ,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,IAAIS,IAAI,CAAC,CAAC,CAAC;EAE9C,SAASC,QAAQA,CAACC,SAAS,EAAE;IAC3BH,QAAQ,CAACG,SAAS,CAAC;EACrB;EAEA,SAASC,WAAWA,CAAC;IAAEC;EAAK,CAAC,EAAE;IAC7B,MAAMC,WAAW,GAAGb,UAAU,CAACc,IAAI,CAChCC,KAAK,IAAKA,KAAK,CAACH,IAAI,KAAKA,IAAI,CAACI,kBAAkB,CAAC,CACpD,CAAC;IAED,IAAIH,WAAW,EAAE;MACf,oBAAOV,OAAA;QAAAc,QAAA,EAAIJ,WAAW,CAACK;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IACnC;IAEA,OAAO,IAAI;EACb;EAEA,oBACEnB,OAAA,CAACF,QAAQ;IACPQ,QAAQ,EAAEA,QAAS;IACnBH,KAAK,EAAEA,KAAM;IACbiB,SAAS,EAAC,UAAU;IACpBZ,WAAW,EAAEA;EAAY;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEN;AAACjB,EAAA,CA3BQD,MAAM;AAAAoB,EAAA,GAANpB,MAAM;AA6Bf,eAAeA,MAAM;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}