{"ast":null,"code":"var _jsxFileName = \"/Users/steven/Desktop/tpc/src/Pages/Events.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../CSS/Events.css';\nimport eventsData from '../DataFiles/EventsData';\nimport Calendar from 'react-calendar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Events() {\n  _s();\n  const [value, setValue] = useState(new Date());\n  function onChange(nextValue) {\n    setValue(nextValue);\n  }\n  function tileContent({\n    date,\n    view\n  }) {\n    const formattedDate = date.toISOString().split('T')[0]; // Convert date to ISO format\n    const eventsForDay = eventsData.filter(event => event.date === formattedDate);\n    if (eventsForDay.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: eventsForDay.map((event, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: event.title\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this);\n    }\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"EventBody\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onChange: onChange,\n      value: value,\n      className: \"Calendar\",\n      tileContent: tileContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"EventList\",\n      children: eventsData.map((event, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Date:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), \" \", event.date, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 60\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Title:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), \" \", event.title, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 62\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), \" \", event.description]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(Events, \"ojhCmkQ3k+kVHyMOfBmyTFu2wy0=\");\n_c = Events;\nexport default Events;\nvar _c;\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"names":["React","useState","eventsData","Calendar","jsxDEV","_jsxDEV","Events","_s","value","setValue","Date","onChange","nextValue","tileContent","date","view","formattedDate","toISOString","split","eventsForDay","filter","event","length","children","map","index","title","fileName","_jsxFileName","lineNumber","columnNumber","className","description","_c","$RefreshReg$"],"sources":["/Users/steven/Desktop/tpc/src/Pages/Events.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../CSS/Events.css';\nimport eventsData from '../DataFiles/EventsData';\nimport Calendar from 'react-calendar';\n\nfunction Events() {\n    const [value, setValue] = useState(new Date());\n\n    function onChange(nextValue) {\n        setValue(nextValue);\n    }\n\n    function tileContent({ date, view }) {\n        const formattedDate = date.toISOString().split('T')[0]; // Convert date to ISO format\n        const eventsForDay = eventsData.filter((event) => event.date === formattedDate);\n        if (eventsForDay.length > 0) {\n            return (\n                <div>\n                    {eventsForDay.map((event, index) => (\n                        <p key={index}>{event.title}</p>\n                    ))}\n                </div>\n            );\n        }\n        return null;\n    }\n\n\n    return (\n        <div className=\"EventBody\">\n            <br></br>\n            <Calendar\n                onChange={onChange}\n                value={value}\n                className=\"Calendar\"\n                tileContent={tileContent}\n            />\n            <ul className=\"EventList\">\n                {eventsData.map((event, index) => (\n                    <li key={index}>\n                        <strong>Date:</strong> {event.date}<br />\n                        <strong>Title:</strong> {event.title}<br />\n                        <strong>Description:</strong> {event.description}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default Events;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}