{"ast":null,"code":"var _jsxFileName = \"/Users/steven/Desktop/tpc/src/Pages/Events.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../CSS/Events.css';\nimport Calendar from 'react-calendar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Events() {\n  _s();\n  const [value, setValue] = useState(new Date());\n  const [events, setEvents] = useState([{\n    date: new Date(2024, 0, 31),\n    title: 'Event 1'\n  }, {\n    date: new Date(2024, 1, 5),\n    title: 'Event 2'\n  }\n  // Add more events as needed\n  ]);\n  function onChange(nextValue) {\n    setValue(nextValue);\n  }\n  function tileContent({\n    date,\n    view\n  }) {\n    const eventForDay = events.find(event => event.date.toDateString() === date.toDateString());\n    if (eventForDay) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: eventForDay.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 14\n      }, this);\n    }\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Calendar, {\n      onChange: onChange,\n      value: value,\n      className: \"Calendar\",\n      tileContent: tileContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: events.map((event, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [event.title, \" - \", event.date.toDateString()]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Events, \"FuFVUS5CeXrj0pnQ9xbL71UbYxc=\");\n_c = Events;\nexport default Events;\nvar _c;\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"names":["React","useState","Calendar","jsxDEV","_jsxDEV","Events","_s","value","setValue","Date","events","setEvents","date","title","onChange","nextValue","tileContent","view","eventForDay","find","event","toDateString","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","index","_c","$RefreshReg$"],"sources":["/Users/steven/Desktop/tpc/src/Pages/Events.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../CSS/Events.css';\nimport Calendar from 'react-calendar';\n\nfunction Events() {\n  const [value, setValue] = useState(new Date());\n  const [events, setEvents] = useState([\n    { date: new Date(2024, 0, 31), title: 'Event 1' },\n    { date: new Date(2024, 1, 5), title: 'Event 2' },\n    // Add more events as needed\n  ]);\n\n  function onChange(nextValue) {\n    setValue(nextValue);\n  }\n\n  function tileContent({ date, view }) {\n    const eventForDay = events.find((event) => event.date.toDateString() === date.toDateString());\n\n    if (eventForDay) {\n      return <p>{eventForDay.title}</p>;\n    }\n\n    return null;\n  }\n\n  return (\n    <div>\n      <Calendar\n        onChange={onChange}\n        value={value}\n        className=\"Calendar\"\n        tileContent={tileContent}\n      />\n      <div>\n        <h2>Events</h2>\n        <ul>\n          {events.map((event, index) => (\n            <li key={index}>\n              {event.title} - {event.date.toDateString()}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default Events;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,mBAAmB;AAC1B,OAAOC,QAAQ,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAIQ,IAAI,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,CACnC;IAAEW,IAAI,EAAE,IAAIH,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC;IAAEI,KAAK,EAAE;EAAU,CAAC,EACjD;IAAED,IAAI,EAAE,IAAIH,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;IAAEI,KAAK,EAAE;EAAU;EAC/C;EAAA,CACD,CAAC;EAEF,SAASC,QAAQA,CAACC,SAAS,EAAE;IAC3BP,QAAQ,CAACO,SAAS,CAAC;EACrB;EAEA,SAASC,WAAWA,CAAC;IAAEJ,IAAI;IAAEK;EAAK,CAAC,EAAE;IACnC,MAAMC,WAAW,GAAGR,MAAM,CAACS,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACR,IAAI,CAACS,YAAY,CAAC,CAAC,KAAKT,IAAI,CAACS,YAAY,CAAC,CAAC,CAAC;IAE7F,IAAIH,WAAW,EAAE;MACf,oBAAOd,OAAA;QAAAkB,QAAA,EAAIJ,WAAW,CAACL;MAAK;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IACnC;IAEA,OAAO,IAAI;EACb;EAEA,oBACEtB,OAAA;IAAAkB,QAAA,gBACElB,OAAA,CAACF,QAAQ;MACPY,QAAQ,EAAEA,QAAS;MACnBP,KAAK,EAAEA,KAAM;MACboB,SAAS,EAAC,UAAU;MACpBX,WAAW,EAAEA;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACFtB,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,EAAI;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACftB,OAAA;QAAAkB,QAAA,EACGZ,MAAM,CAACkB,GAAG,CAAC,CAACR,KAAK,EAAES,KAAK,kBACvBzB,OAAA;UAAAkB,QAAA,GACGF,KAAK,CAACP,KAAK,EAAC,KAAG,EAACO,KAAK,CAACR,IAAI,CAACS,YAAY,CAAC,CAAC;QAAA,GADnCQ,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACpB,EAAA,CA1CQD,MAAM;AAAAyB,EAAA,GAANzB,MAAM;AA4Cf,eAAeA,MAAM;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}